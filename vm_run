#! /bin/bash

vm_data="vm-data"
vm_image="cornellappdev/vm"
vm_container="vm-container"
vm_user="vm-user"

vm_data_output=$(sudo docker ps -aqf name=$vm_data)
vm_image_output=$(sudo docker images -q $vm_image)
vm_container_output=$(sudo docker ps -qf name=$vm_container)

recreate_data_volume() {
    if [[ -z $vm_data_output ]]
    then
        echo "Creating data volume..."
    else
        echo "Recreating data volume..."
    fi

    read -p "Enter a path (on your machine) to use as the home directory: " host_directory
    host_directory=$(cd ${host_directory/#\~/$HOME} && pwd)
    echo "Mounting directory $host_directory as /home/$vm_user..."

    sudo docker rm $vm_data &> /dev/null
    sudo docker create -v $host_directory:/home/$vm_user --name $vm_data busybox /bin/true &> /dev/null
}

rebuild_image() {
    if [[ -z $vm_image_output ]]
    then
        echo "Building VM image..."
    else
        echo "Rebuilding VM image..."
    fi
    
    sudo docker kill $vm_container &> /dev/null
    sudo docker rm $vm_container &> /dev/null
    sudo docker rmi $vm_image &> /dev/null
    sudo docker build . -t $vm_image
}

pull_image() {
    if [[ -z $vm_image_output ]]
    then
        echo "Fetching VM image..."
    else
        echo "Updating VM image..."
    fi

    sudo docker rmi $vm_image &> /dev/null
    sudo docker pull $vm_image 
}

recreate_container() {
    if [[ -z $vm_container_output ]]
    then
        echo "Creating VM container..."
    else
        echo "Recreating VM container..."
    fi
    
    sudo docker kill $vm_container &> /dev/null
    sudo docker rm $vm_container &> /dev/null
    sudo docker run -d -p 5000:5000 --volumes-from $vm_data --name $vm_container $vm_image &> /dev/null
}

attach_to_container() {
    echo "Attaching to VM container..."
    sudo docker exec -it $vm_container /tmp/vm_init
}

if [[ $1 == "rebuild" ]]
then
    rebuild_image
else
    if [[ $1 == "reset" || -z $vm_data_output || -z $vm_container_output ]]
    then
        recreate_data_volume
        # pull_image
        recreate_container
    fi

    attach_to_container
fi
